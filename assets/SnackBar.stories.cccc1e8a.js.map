{"version":3,"file":"SnackBar.stories.cccc1e8a.js","sources":["../../node_modules/@heroicons/react/20/solid/esm/CheckCircleIcon.js","../../node_modules/@heroicons/react/20/solid/esm/ExclamationTriangleIcon.js","../../node_modules/@heroicons/react/20/solid/esm/XCircleIcon.js","../../src/components/SnackBar/SnackBar.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction ExclamationTriangleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ExclamationTriangleIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import React, {\n  forwardRef,\n  useImperativeHandle,\n  useState,\n  useEffect,\n  useRef,\n  ReactElement,\n  useCallback,\n  useLayoutEffect,\n} from 'react';\nimport { CheckCircleIcon, XCircleIcon, ExclamationTriangleIcon } from '@heroicons/react/20/solid';\n\nimport type { HandleMessage, SnackBarProps } from '.';\n\nconst HCSnackBar: React.ForwardRefRenderFunction<HandleMessage, SnackBarProps> = (\n  { className, type = 'success', content }: SnackBarProps,\n  ref,\n) => {\n  // const messageRef = useRef<HTMLDivElement>(null);\n\n  const [icon, setIcon] = useState<ReactElement>();\n  const [colorClass, setColorClass] = useState('');\n  const [positionStyle, setPositionStyle] = useState('');\n  const [height, setHeight] = useState(0);\n  const messageRef = useCallback((node: HTMLDivElement) => {\n    if (node && node.getBoundingClientRect()) {\n      console.log(node.getBoundingClientRect());\n      setHeight(node.getBoundingClientRect().height);\n    }\n  }, []);\n\n  useLayoutEffect(() => {\n    switch (type) {\n      case 'success':\n        setIcon(<CheckCircleIcon />);\n        setColorClass('bg-success icon-onColor text-onColor');\n        break;\n      case 'error':\n        setIcon(<XCircleIcon />);\n        setColorClass('bg-destructive icon-onColor text-onColor');\n        break;\n      case 'warning':\n        setIcon(<ExclamationTriangleIcon />);\n        setColorClass('bg-warning icon-primary text-secondary');\n        break;\n    }\n  }, [type]);\n\n  useImperativeHandle(ref, () => ({\n    open() {\n      setPositionStyle('0');\n\n      setTimeout(() => {\n        setPositionStyle(`-${height}px`);\n      }, 2000);\n    },\n  }));\n\n  useLayoutEffect(() => {\n    setPositionStyle(`-${height}px`);\n  }, [height]);\n\n  return (\n    <div\n      ref={messageRef}\n      className={`${className} w-screen fixed flex justify-center p-4 transition-bottom duration-200`}\n      style={{\n        bottom: positionStyle,\n      }}\n    >\n      <div className={`${colorClass} rounded-lg flex shadow-lg px-4`}>\n        <div className='shrink-0 w-6 h-6 py-3 mr-4'>{icon}</div>\n        <p className='text-body-s py-3.5'>{content}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default forwardRef(HCSnackBar);\n"],"names":["CheckCircleIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","CheckCircleIcon$1","ExclamationTriangleIcon","ExclamationTriangleIcon$1","XCircleIcon","XCircleIcon$1","HCSnackBar","className","content","ref","icon","setIcon","useState","colorClass","setColorClass","positionStyle","setPositionStyle","height","setHeight","messageRef","useCallback","node","console","useLayoutEffect","type","useImperativeHandle","setTimeout","_jsx","_jsxs","SnackBar","forwardRef"],"mappings":"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"}