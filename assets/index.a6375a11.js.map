{"version":3,"file":"index.a6375a11.js","sources":["../../src/components/Radio/context.ts","../../src/components/Radio/Radio.tsx","../../src/components/Radio/Group.tsx","../../src/components/Radio/index.ts"],"sourcesContent":["import React from 'react';\n\nimport { RadioGroupContextProps } from './interface';\n\nconst RadioGroupContext = React.createContext<RadioGroupContextProps | null>(null);\n\nexport const RadioGroupContextProvider = RadioGroupContext.Provider;\n\nexport default RadioGroupContext;\n","import React, { useContext, useState, useEffect } from 'react';\n\nimport HCControlItem from '../ControlItem';\nimport RadioGroupContext from './context';\n\nimport type { RadioValueType, RadioProps } from './interface';\nimport type { InputMouseEvent, InputChangeEvent } from '../ControlItem/interface';\n\nconst HCRadio: React.ForwardRefRenderFunction<HTMLDivElement, RadioProps> = (\n  props: RadioProps,\n  _,\n) => {\n  const groupContext = useContext(RadioGroupContext);\n  const [valueType, setValueType] = useState('');\n  const [ringClass, setRingClass] = useState('');\n  const [fillingClass, setFillingClass] = useState('');\n\n  const onChangeHandler = (e: InputChangeEvent) => {\n    const value = e.target.value;\n\n    if (groupContext && groupContext.onChange) {\n      let oriValue: RadioValueType;\n\n      // Handle boolean and number type cases.\n      switch (valueType) {\n        case 'boolean':\n          oriValue = value === 'true' ? true : false;\n          break;\n        case 'number':\n          oriValue = +value;\n          break;\n        default:\n          oriValue = value;\n          break;\n      }\n\n      groupContext.onChange(oriValue);\n    }\n\n    if (props.onChange) {\n      props.onChange(e);\n    }\n  };\n\n  const onClickHandler = (e: InputMouseEvent) => {\n    if (props.onClick) props.onClick(e);\n  };\n\n  const radioProps: Omit<RadioProps, 'value'> & { value: string } = {\n    ...props,\n    disabled: props.disabled || groupContext?.disabled,\n    value: `${props.value}`,\n    checked: groupContext ? groupContext.value === props.value : props.checked,\n    onChange: onChangeHandler,\n    onClick: onClickHandler,\n  };\n\n  useEffect(() => {\n    setValueType(typeof props.value);\n  }, [valueType, props.value]);\n\n  useEffect(() => {\n    if (radioProps.checked) {\n      if (radioProps.disabled) {\n        setFillingClass('control-item-bg-disenabled');\n        setRingClass('control-item-border-disenabled');\n      } else {\n        setFillingClass('control-item-bg-selected');\n        setRingClass('control-item-border-selected');\n      }\n    } else {\n      if (radioProps.disabled) {\n        setFillingClass('control-item-bg');\n        setRingClass('control-item-border-disabled');\n      } else {\n        setFillingClass('control-item-bg');\n        setRingClass('control-item-border');\n      }\n    }\n  }, [radioProps.checked, radioProps.disabled]);\n\n  return (\n    <HCControlItem\n      type='radio'\n      {...radioProps}\n      controller={\n        <div\n          className={`${ringClass} w-4 h-4 flex items-center justify-center border rounded-full`}\n        >\n          <div className={`w-2.5 h-2.5 rounded-full ${fillingClass}`}></div>\n        </div>\n      }\n    />\n  );\n};\n\nexport default React.forwardRef(HCRadio);\n","import { RadioGroupContextProvider } from './context';\nimport HCRadio from './Radio';\n\nimport type { GroupProps, RadioValueType } from './interface';\n\nconst HCRadioGroup: React.FC<GroupProps> = (props: GroupProps) => {\n  const onRadioChange = (newValue: RadioValueType) => {\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  };\n\n  const children =\n    props.options && props.options.length > 0\n      ? props.options.map((item, index) => <HCRadio key={index} {...item} />)\n      : props.children;\n\n  return (\n    <div className={`${props.className} grid ${props.image ? 'grid-cols-3 gap-4' : 'gap-y-2'}`}>\n      <RadioGroupContextProvider\n        value={{\n          value: props.value,\n          disabled: props.disabled,\n          onChange: onRadioChange,\n        }}\n      >\n        {children}\n      </RadioGroupContextProvider>\n    </div>\n  );\n};\n\nexport default HCRadioGroup;\n","import { InputRef } from 'antd';\n\nimport Radio from './Radio';\nimport Group from './Group';\n\nimport type { RadioProps, GroupProps } from './interface';\n\nexport type { RadioProps, GroupProps } from './interface';\n\nexport type Radio = React.ForwardRefExoticComponent<RadioProps>;\nexport type InputType = InputRef;\nexport type RadioGroup = React.ForwardRefExoticComponent<GroupProps>;\nexport type { RadioOptionType, RadioValueType } from './interface';\n\nexport const HCRadio = Radio as Radio;\nexport const HCRadioGroup = Group as RadioGroup;\n"],"names":["RadioGroupContext","React","RadioGroupContextProvider","HCRadio","props","_","groupContext","useContext","valueType","setValueType","useState","ringClass","setRingClass","fillingClass","setFillingClass","onChangeHandler","e","value","oriValue","onClickHandler","radioProps","disabled","checked","useEffect","_jsx","HCControlItem","Radio","HCRadioGroup","onRadioChange","newValue","children","item","index","Group"],"mappings":"qIAIA,MAAMA,EAAoBC,EAAM,cAA6C,IAAI,EAEpEC,EAA4BF,EAAkB,SCE3DG,EAAA,CAAAC,EAAAC,IAAA,CAIE,MAAAC,EAAAC,qBAAAP,CAAA,EACA,CAAAQ,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,QAAA,SAAA,EAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,QAAA,SAAA,EAAA,EAEAK,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MAEA,GAAAV,GAAAA,EAAA,SAAA,CACE,IAAAY,EAGA,OAAAV,EAAA,CAAiB,IAAA,UAEbU,EAAAA,IAAAA,OACA,MAAA,IAAA,SAEAA,EAAAA,CAAAA,EACA,MAAA,QAEAA,EAAAA,EACA,KAAA,CAGJZ,EAAAA,SAAAA,CAAAA,CAA8B,CAGhCF,EAAA,UACEA,EAAAA,SAAAA,CAAAA,CACF,EAGFe,EAAAH,GAAA,CACEZ,EAAA,SAAmBA,EAAAA,QAAAA,CAAAA,CAAe,EAGpCgB,EAAA,CAAkE,GAAAhB,EAC7DA,SAAAA,EAAAA,WAAAA,GAAAA,YAAAA,EAAAA,UACuCiB,MAAAA,GAAAA,EAAAA,QAC1BJ,QAAAA,EAAAA,EAAAA,QAAAA,EAAAA,MAAAA,EAAAA,QACmDK,SAAAA,EACzDP,QAAAA,CACDI,EAGXI,OAAAA,EAAAA,QAAAA,UAAAA,IAAAA,CACEd,EAAAA,OAAAA,EAAAA,KAAAA,CAA+B,EAAA,CAAAD,EAAAJ,EAAA,KAAA,CAAA,EAGjCmB,EAAAA,QAAAA,UAAAA,IAAAA,CACEH,EAAA,QACEA,EAAA,UACEN,EAAAA,4BAAAA,EACAF,EAAAA,gCAAAA,IAEAE,EAAAA,0BAAAA,EACAF,EAAAA,8BAAAA,GAGFQ,EAAA,UACEN,EAAAA,iBAAAA,EACAF,EAAAA,8BAAAA,IAEAE,EAAAA,iBAAAA,EACAF,EAAAA,qBAAAA,EAEJ,EAAA,CAAAQ,EAAA,QAAAA,EAAA,QAAA,CAAA,EAGFI,EAAAC,EAAA,CACgB,KAAA,QACP,GAAAL,EACDA,WAAAA,EAAAA,MAAAA,CAEF,UAAA,GAAAT,iEACgBA,SAAAA,EAAAA,MAAAA,CAEd,UAAA,4BAAAE,GAA4CA,CAAAA,CAAe,CAAA,CAAO,CAAA,CAK5E,EAEAa,EAAAzB,EAAA,WAAAE,CAAA,ywCC3FA,MAAAwB,EAAAvB,GAAA,CACE,MAAAwB,EAAAC,GAAA,CACEzB,EAAA,UACEA,EAAAA,SAAAA,CAAAA,CACF,EAGF0B,EAAA1B,EAAA,SAAAA,EAAA,QAAA,OAAA,EAAAA,EAAA,QAAA,IAAA,CAAA2B,EAAAC,IAAAR,EAAArB,EAAA,CAEiD,GAAA4B,CAAiBA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,SAGlE,OAAAP,EAAA,MAAA,CACE,UAAA,GAAApB,EAAA,kBAAAA,EAAA,MAAA,oBAAA,YAA+E,SAAAoB,EAAAtB,EAAA,CACnD,MAAA,CACjB,MAAAE,EAAA,MACQa,SAAAA,EAAAA,SACGI,SAAAA,CACNO,EACZ,SAAAE,CAAEA,CAAAA,CAEO,CAAA,CAIjB,+rBChBO,MAAM3B,EAAUuB,EACVC,EAAeM"}