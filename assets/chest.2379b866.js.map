{"version":3,"file":"chest.2379b866.js","sources":["../../src/components/Checkbox/context.ts","../../src/assets/img/heroicons/mini/check.tsx","../../src/components/Checkbox/Checkbox.tsx","../../src/components/Checkbox/Group.tsx","../../src/components/Checkbox/index.ts","../../src/assets/img/body/chest.svg"],"sourcesContent":["import React from 'react';\n\nimport { CheckboxGroupContextProps } from './interface';\n\nconst CheckboxGroupContext = React.createContext<CheckboxGroupContextProps | null>(null);\n\nexport const CheckboxGroupContextProvider = CheckboxGroupContext.Provider;\n\nexport default CheckboxGroupContext;\n","interface Props {\n  className?: string;\n}\n\nconst Check = (props: Props) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 20 20'\n      fill='currentColor'\n      className={`w-4 h-4 ${props.className}`}\n    >\n      <path\n        fillRule='evenodd'\n        d='M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z'\n        clipRule='evenodd'\n      />\n    </svg>\n  );\n};\n\nexport default Check;\n","import React, { useContext, useState, useEffect } from 'react';\n\nimport CheckboxGroupContext from './context';\nimport Check from '~/assets/img/heroicons/mini/check';\n\nimport { CheckboxProps, InputChangeEvent, CheckboxValueType, InputMouseEvent } from './interface';\n\nconst HCCheckbox: React.ForwardRefRenderFunction<HTMLDivElement, CheckboxProps> = (\n  props: CheckboxProps,\n) => {\n  const groupContext = useContext(CheckboxGroupContext);\n  const [valueType, setValueType] = useState('');\n  const [borderClass, setBorderClass] = useState('');\n  const [bgClass, setBgClass] = useState('');\n  const [iconClass, setIconClass] = useState('');\n  const [labelClass, setLabelClass] = useState('');\n\n  const onChangeHandler = (e: InputChangeEvent) => {\n    const value = e.target.value;\n\n    if (groupContext && groupContext.onChange) {\n      let oriValue: CheckboxValueType;\n\n      // Handle boolean and number type cases.\n      switch (valueType) {\n        case 'boolean':\n          oriValue = value === 'true' ? true : false;\n          break;\n        case 'number':\n          oriValue = +value;\n          break;\n        default:\n          oriValue = value;\n          break;\n      }\n\n      groupContext.onChange(oriValue);\n    }\n\n    if (props.onChange) {\n      props.onChange(e);\n    }\n  };\n\n  const onClickHandler = (e: InputMouseEvent) => {\n    if (props.onClick) props.onClick(e);\n  };\n\n  // Replace value type because input value only receives string and number type.\n  const checkboxProps: Omit<CheckboxProps, 'value'> & { value: string } = {\n    disabled: props.disabled,\n    value: `${props.value}`,\n    onChange: onChangeHandler,\n    onClick: onClickHandler,\n  };\n\n  checkboxProps.checked = groupContext ? groupContext.value.includes(props.value) : props.checked;\n  checkboxProps.disabled = checkboxProps.disabled || groupContext?.disabled;\n\n  useEffect(() => {\n    setValueType(typeof props.value);\n  }, [valueType, props.value]);\n\n  useEffect(() => {\n    if (checkboxProps.checked) {\n      if (checkboxProps.disabled) {\n        setBorderClass('border border-disabled');\n        setIconClass('icon-bg-tertiary');\n        setLabelClass('text-disabled');\n        setBgClass('bg-disabled');\n      } else {\n        setBorderClass('border-2 border-active');\n        setIconClass('icon-bg-highlight');\n        setLabelClass('text-highlight');\n        setBgClass('bg-highlight-light');\n      }\n    } else {\n      setIconClass('');\n      if (checkboxProps.disabled) {\n        setBorderClass('border border-disabled');\n        setLabelClass('text-disabled');\n        setBgClass('bg-disabled');\n      } else {\n        setBorderClass('border');\n        setLabelClass('text-secondary');\n        setBgClass('bg-primary');\n      }\n    }\n  }, [checkboxProps.checked, checkboxProps.disabled]);\n\n  return (\n    <div\n      className={`\n        w-full text-secondary\n        rounded-lg border-solid hover:border-2 ${borderClass} ${bgClass}\n        hover:border-hover hover:bg-hover\n        transition duration-300\n        flex relative`}\n    >\n      {/* Form element */}\n      <label\n        htmlFor={`${props.value}`}\n        className={`absolute inset-0 w-full h-full flex ${\n          checkboxProps.disabled ? 'hover:cursor-not-allowed' : 'hover:cursor-pointer'\n        }`}\n      >\n        <input\n          type='checkbox'\n          id={`${props.value}`}\n          {...checkboxProps}\n          className='appearance-none'\n        />\n      </label>\n      {/* UI layout */}\n      <div className={`flex grow ${props.image ? 'flex-col' : 'pl-4 py-4'}`}>\n        <div className={`flex ${props.image ? 'grow shrink-0' : 'mr-4'}`}>\n          {props.image && <div className='w-8 mr-auto'></div>}\n          {props.image && <div className='pt-4'>{props.image}</div>}\n          <div className={`${props.image ? 'p-2 ml-auto' : ''}`}>\n            <div\n              className={`\n                input w-4 h-4 flex items-center justify-center\n                border ${checkboxProps.disabled ? 'border-disabled' : 'border-primary'}\n                rounded hover:border-hover`}\n            >\n              <div className={`rounded ${iconClass}`}>\n                {checkboxProps.checked && <Check className='icon-onColor' />}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={`flex flex-col items-center ${props.image ? 'py-4' : ''}`}>\n          <span className={`text-body-s ${labelClass}`}>{props.label}</span>\n          {props.description && (\n            <span\n              className={`text-body-xs mt-1 ${\n                checkboxProps.disabled ? 'text-disabled' : 'text-tertiary'\n              }`}\n            >\n              {props.description}\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HCCheckbox;\n","import { CheckboxGroupContextProvider } from './context';\nimport HCCheckbox from './Checkbox';\n\nimport type { GroupProps, CheckboxValueType } from './interface';\n\nconst HCCheckboxGroup: React.FC<GroupProps> = (props: GroupProps) => {\n  const onCheckboxChange = (value: CheckboxValueType) => {\n    if (props.onChange) {\n      const index = props.value.findIndex((item) => item === value);\n\n      if (index !== -1) {\n        props.onChange(props.value.filter((item) => item !== value));\n      } else {\n        const newList = props.value.map((item) => item);\n        newList.push(value);\n        props.onChange(newList);\n      }\n    }\n  };\n\n  const children =\n    props.options && props.options.length > 0\n      ? props.options.map((item, index) => <HCCheckbox key={index} {...item} />)\n      : props.children;\n\n  return (\n    <div className={`${props.className} grid ${props.image ? 'grid-cols-3 gap-4' : 'gap-y-2'}`}>\n      <CheckboxGroupContextProvider\n        value={{\n          value: props.value,\n          disabled: props.disabled,\n          onChange: onCheckboxChange,\n        }}\n      >\n        {children}\n      </CheckboxGroupContextProvider>\n    </div>\n  );\n};\n\nexport default HCCheckboxGroup;\n","import Checkbox from './Checkbox';\nimport Group from './Group';\n\nimport type { CheckboxProps, GroupProps } from './interface';\n\nexport type Checkbox = React.ForwardRefExoticComponent<CheckboxProps>;\nexport type CheckboxGroup = React.ForwardRefExoticComponent<GroupProps>;\nexport type { CheckboxValueType } from './interface';\n\nexport const HCCheckbox = Checkbox as Checkbox;\nexport const HCCheckboxGroup = Group as CheckboxGroup;\n","export default \"__VITE_ASSET__38b62ae0__\""],"names":["CheckboxGroupContext","React","CheckboxGroupContextProvider","Check","props","_jsx","className","HCCheckbox","groupContext","useContext","valueType","setValueType","useState","borderClass","setBorderClass","bgClass","setBgClass","iconClass","setIconClass","labelClass","setLabelClass","onChangeHandler","e","value","target","onChange","oriValue","onClickHandler","onClick","checkboxProps","disabled","checked","includes","useEffect","children","htmlFor","type","id","_jsxs","image","label","description","HCCheckboxGroup","onCheckboxChange","item","newList","index","Checkbox","Group","Chest"],"mappings":"oGAIA,MAAMA,EAAuBC,EAAM,cAAgD,IAAI,EAE1EC,EAA+BF,EAAqB,SCFjEG,EAAAC,GACEC,EAAA,MAAA,CACE,MAAA,6BACQ,QAAA,YACE,KAAA,eACH,UAAA,WAAAD,EAAA,YACuBE,SAAAA,EAAAA,OAAAA,CAE5B,SAAA,UACW,EAAA,+IACP,SAAA,SACO,CAAA,CAAS,CAAA,sMCR1B,MAAMC,EACJH,GACG,CACGI,MAAAA,EAAeC,qBAAWT,CAAoB,EAC9C,CAACU,EAAWC,CAAY,EAAIC,mBAAS,EAAE,EACvC,CAACC,EAAaC,CAAc,EAAIF,mBAAS,EAAE,EAC3C,CAACG,EAASC,CAAU,EAAIJ,mBAAS,EAAE,EACnC,CAACK,EAAWC,CAAY,EAAIN,mBAAS,EAAE,EACvC,CAACO,EAAYC,CAAa,EAAIR,mBAAS,EAAE,EAEzCS,EAAmBC,GAAwB,CACzCC,MAAAA,EAAQD,EAAEE,OAAOD,MAEnBf,GAAAA,GAAgBA,EAAaiB,SAAU,CACrCC,IAAAA,EAGJ,OAAQhB,EAAS,CACf,IAAK,UACQa,EAAAA,IAAU,OACrB,MACF,IAAK,SACHG,EAAW,CAACH,EACZ,MACF,QACaA,EAAAA,EACX,KAAM,CAGVf,EAAaiB,SAASC,CAAQ,CAChC,CAEItB,EAAMqB,UACRrB,EAAMqB,SAASH,CAAC,CAClB,EAGIK,EAAkBL,GAAuB,CACzClB,EAAMwB,SAASxB,EAAMwB,QAAQN,CAAC,CAAA,EAI9BO,EAAkE,CACtEC,SAAU1B,EAAM0B,SAChBP,MAAQ,GAAEnB,EAAMmB,QAChBE,SAAUJ,EACVO,QAASD,CAAAA,EAGGI,OAAAA,EAAAA,QAAUvB,EAAeA,EAAae,MAAMS,SAAS5B,EAAMmB,KAAK,EAAInB,EAAM2B,QAC1ED,EAAAA,SAAWD,EAAcC,WAAYtB,GAAAA,YAAAA,EAAcsB,UAEjEG,EAAAA,QAAAA,UAAU,IAAM,CACDtB,EAAA,OAAOP,EAAMmB,KAAK,CAC9B,EAAA,CAACb,EAAWN,EAAMmB,KAAK,CAAC,EAE3BU,EAAAA,QAAAA,UAAU,IAAM,CACVJ,EAAcE,QACZF,EAAcC,UAChBhB,EAAe,wBAAwB,EACvCI,EAAa,kBAAkB,EAC/BE,EAAc,eAAe,EAC7BJ,EAAW,aAAa,IAExBF,EAAe,wBAAwB,EACvCI,EAAa,mBAAmB,EAChCE,EAAc,gBAAgB,EAC9BJ,EAAW,oBAAoB,IAGjCE,EAAa,EAAE,EACXW,EAAcC,UAChBhB,EAAe,wBAAwB,EACvCM,EAAc,eAAe,EAC7BJ,EAAW,aAAa,IAExBF,EAAe,QAAQ,EACvBM,EAAc,gBAAgB,EAC9BJ,EAAW,YAAY,KAG1B,CAACa,EAAcE,QAASF,EAAcC,QAAQ,CAAC,IAGhD,MAAA,CACExB,UAAY;AAAA;AAAA,iDAE+BO,KAAeE;AAAAA;AAAAA;AAAAA,uBAGzCmB,UAGjB7B,EAAA,QAAA,CACE8B,QAAU,GAAE/B,EAAMmB,QAClBjB,UAAY,uCACVuB,EAAcC,SAAW,2BAA6B,yBACrDI,WAEH,QAAA,CACEE,KAAK,WACLC,GAAK,GAAEjC,EAAMmB,QAAQ,GACjBM,EACJvB,UAAU,iBAAA,CAAiB,CAAA,CAC3B,EAGJgC,EAAA,MAAA,CAAKhC,UAAY,aAAYF,EAAMmC,MAAQ,WAAa,cAAcL,UACpEI,EAAA,MAAA,CAAKhC,UAAY,QAAOF,EAAMmC,MAAQ,gBAAkB,SAASL,SAC9D9B,CAAAA,EAAMmC,SAAS,MAAA,CAAKjC,UAAU,aAAa,CAAA,EAC3CF,EAAMmC,SAAS,MAAA,CAAKjC,UAAU,OAAM4B,SAAE9B,EAAMmC,KAAAA,CAAK,EAClDlC,EAAA,MAAA,CAAKC,UAAY,GAAEF,EAAMmC,MAAQ,cAAgB,KAAKL,WACpD,MAAA,CACE5B,UAAY;AAAA;AAAA,yBAEDuB,EAAcC,SAAW,kBAAoB;AAAA,4CAC1BI,WAE9B,MAAA,CAAK5B,UAAY,WAAUW,IAAYiB,SACpCL,EAAcE,SAAW1B,EAACF,EAAK,CAACG,UAAU,cAAA,CAAc,CAAA,CAAG,CAAA,CACxD,CAAA,CAEJ,CAAA,CAAA,CAAA,EAERgC,EAAA,MAAA,CAAKhC,UAAY,8BAA6BF,EAAMmC,MAAQ,OAAS,KAAKL,UACxE7B,EAAA,OAAA,CAAMC,UAAY,eAAca,IAAae,SAAE9B,EAAMoC,KAAK,CAAA,EACzDpC,EAAMqC,eACL,OAAA,CACEnC,UAAY,qBACVuB,EAAcC,SAAW,gBAAkB,kBAC1CI,SAEF9B,EAAMqC,WAAAA,CAEV,CAAA,CAAA,CACG,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAEV,EC7IAC,EAAAtC,GAAA,CACE,MAAAuC,EAAApB,GAAA,CACE,GAAAnB,EAAA,SAGE,GAFAA,EAAA,MAAA,UAAAwC,GAAAA,IAAArB,CAAA,IAEA,GACEnB,EAAAA,SAAAA,EAAAA,MAAAA,OAAAA,GAAAA,IAAAA,CAAAA,CAAAA,MAA2D,CAE3D,MAAAyC,EAAAzC,EAAA,MAAA,IAAAwC,GAAAA,CAAA,EACAC,EAAAA,KAAAA,CAAAA,EACAzC,EAAAA,SAAAA,CAAAA,CAAsB,CAE1B,EAGF8B,EAAA9B,EAAA,SAAAA,EAAA,QAAA,OAAA,EAAAA,EAAA,QAAA,IAAA,CAAAwC,EAAAE,IAAAzC,EAAAE,EAAA,CAEoD,GAAAqC,CAAiBA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,SAGrE,OAAAvC,EAAA,MAAA,CACE,UAAA,GAAAD,EAAA,kBAAAA,EAAA,MAAA,oBAAA,YAA+E,SAAAC,EAAAH,EAAA,CAChD,MAAA,CACpB,MAAAE,EAAA,MACQmB,SAAAA,EAAAA,SACGO,SAAAA,CACNa,EACZ,SAAAT,CAAEA,CAAAA,CAEO,CAAA,CAIjB,ssBC7BO,MAAM3B,EAAawC,EACbL,EAAkBM,ECVhBC,EAAA,GAAA,IAAA,IAAA,qBAAA,YAAA,GAAA,EAAA"}